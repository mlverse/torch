on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: "0 1 * * *"


name: Test

jobs:
  check:
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-18.04", "macos-latest", "windows-latest"]
        r_version: ["release"]
        include:
          - os: ubuntu-18.04
            cran: https://demo.rstudiopm.com/all/__linux__/bionic/latest
            install: 0
            r_version: "release"
          - os: macos-latest
            install: 1
            r_version: "release"
          - os: windows-latest
            install: 1
            r_version: "release"
          - os: windows-latest
            install: 1
            r_version: "3.6"
            
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} (${{ matrix.r_version }})
    timeout-minutes: 120
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      INSTALL_TORCH: ${{ matrix.install }}
      CRAN: ${{ matrix.cran }}
      TORCH_LOG: 2
      TORCH_TEST: 1
      TORCH_INSTALL: 1

    steps:
      - uses: actions/checkout@v1
      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.r_version }}
      - uses: r-lib/actions/setup-pandoc@master
      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "install.packages(c('remotes'))" -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"
      - name: Install dependencies
        run: Rscript -e "install.packages(c('remotes', 'rcmdcheck'))" -e "remotes::install_deps(dependencies = TRUE)"
      - name: Build lantern and get libtorch
        if: matrix.install == 0 || contains( github.event.pull_request.labels.*.name, 'lantern')
        run: | 
          Rscript tools/buildlantern.R
      - name: Check
        run:  |
          rcmdcheck::rcmdcheck(args = c("--no-multiarch", "--no-manual"), error_on = "error", check_dir = "check")
        shell: Rscript {0}
      - name: Install
        run: |
          torch_package <- dir("check", full.names = TRUE, pattern = "torch_")
          install.packages(torch_package, repos = NULL, type = "source", INSTALL_opts = "--no-multiarch")
        shell: Rscript {0}
      - name: Test
        run: |
          setwd("tests")
          source("testthat.R")
        shell: Rscript {0}
      - name: Logs
        if: ${{ failure() }}
        run: cat lantern.log
  gpu:
    strategy:
      fail-fast: false
      matrix: 
        cuda: ["101", "102", "092"]
    runs-on: [self-hosted, linux]
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: https://demo.rstudiopm.com/all/__linux__/bionic/latest
      DOCKER_FILE: ${{ format('docker/cuda-{0}', matrix.cuda) }}
      DOCKER_TAG: ${{ format('torch{0}', matrix.cuda) }}
      TORCH_TEST: 1
      TORCH_INSTALL: 1
    steps:
      - uses: actions/checkout@v2
      - name: Build image
        run: docker build -f $DOCKER_FILE -t $DOCKER_TAG .
      - name: Run checks
        run: docker run --rm --gpus all $DOCKER_TAG sh torch/tools/check.sh
